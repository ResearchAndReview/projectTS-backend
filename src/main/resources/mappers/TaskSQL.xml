<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.researchandreview.projecttsbackend.mapper.TaskMapper">
    <select id="findAllTasks" resultType="Task">
        SELECT * FROM Task;
    </select>
    <select id="findOneTaskById" resultType="Task" parameterType="map">
        SELECT * FROM Task where id=#{id} AND ownerNodeId=#{uuid};
    </select>
    <select id="findTasksByNodeId" resultType="Task" parameterType="string">
        SELECT * FROM Task where workingNodeId=#{workingNodeId};
    </select>
    <select id="findTasksByStatusSuccess" resultType="Task">
        SELECT * FROM Task where status="SUCCESS";
    </select>
    <select id="findTasksByStatusProgress" resultType="Task">
        SELECT * FROM Task where status="PROGRESS";
    </select>
    <select id="findTasksByStatusFailed" resultType="Task">
        SELECT * FROM Task where status="FAILED";
    </select>


    <insert id="insertOneTask"
            parameterType="org.researchandreview.projecttsbackend.model.Task"
            useGeneratedKeys="true"
            keyProperty="id"
    >
        INSERT INTO Task (workingNodeId, ownerNodeId, status, createdAt, updatedAt, failCause, translateFrom, translateTo)
        VALUES (null, #{ownerNodeId},DEFAULT,  DEFAULT, DEFAULT, null, #{translateFrom}, #{translateTo});
    </insert>

   <!-- <resultMap id="userResultMap" type="com.example.myapp.model.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
    </resultMap>-->

    <!--<select id="findById" parameterType="long" resultMap="userResultMap">
        SELECT * FROM users WHERE id = #{id}
    </select>

    <select id="findAll" resultMap="userResultMap">
        SELECT * FROM users
    </select>

    <insert id="insert" parameterType="com.example.myapp.model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (name, email) VALUES (#{name}, #{email})
    </insert>

    <update id="update" parameterType="com.example.myapp.model.User">
        UPDATE users SET name=#{name}, email=#{email} WHERE id=#{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM users WHERE id=#{id}
    </delete>-->
</mapper>
